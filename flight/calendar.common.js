String.prototype.Left = function(a) { if (isNaN(a) || a == null) { a = 0 } else { if (parseInt(a) < 0 || parseInt(a) > this.length) { a = 0 } } return this.substr(0, this.length - a) + "**" }; function appendZero(a) { return (("00" + a).substr(("00" + a).length - 2)) } function GetMonthMaxDay(e, a) { var b = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31); var d = 0, c = this.formatYear(e); d = b[a]; if (a == 1) { if (((c % 4 == 0) && (c % 100 != 0)) || (c % 400 == 0)) { d++ } } return (d) } function formatYear(b) { var a = parseInt(b, 10); if (a < 100) { a += 1900; if (a < 1940) { a += 100 } } if (a < this.MinYear) { a = this.MinYear } if (a > this.MaxYear) { a = this.MaxYear } return (a) } function formatDate(h, a) { var i = ""; var g = formatYear(h.getFullYear()); var e = appendZero(h.getMonth() + 1); var f = appendZero(h.getDate()); var c = appendZero(h.getHours()); var b = appendZero(h.getMinutes()); var d = appendZero(h.getSeconds()); switch (a) { case 0: i = g + "." + e + "." + f + "."; break; case 1: i = g + "-" + e + "-" + f; break; case 2: i = g + "-" + e + "-" + f + " " + appendZero(c) + ":" + appendZero(b) + ":" + appendZero(d); break; default: i = g + "-" + e + "-" + f } return i } function getWeekFirstDay(c) { var a = new Date(); var b = new Date(a - (a.getDay() - 1) * 86400000); return formatDate(b, c) } function getWeekLastDay(d) { var a = new Date(); var b = new Date(a - (a.getDay() - 1) * 86400000); var c = new Date((b / 1000 + 6 * 86400) * 1000); return formatDate(c, d) } function testDate() { var a = new Date(); var c = new Date(a.getFullYear(), a.getMonth(), 1); alert(c.getFullYear()); alert(appendZero(c.getMonth() + 1)); var b = new Date(a.getFullYear(), a.getMonth() - 1, 1); alert(b.getFullYear()); alert(appendZero(b.getMonth() + 1)) } function getMonthFirstDay(c) { var a = new Date(); var b = new Date(a.getFullYear(), a.getMonth(), 1); return formatDate(b, c) } function getMonthLastDay(d) { var a = new Date(); var b = new Date(a.getFullYear(), a.getMonth() + 1, 1); var c = new Date(b - 86400000); return formatDate(c, d) } function getDateFromString(c) { var e = c.split("-"); for (var b = 0; b < e.length; b++) { if (e[b].length > 1 && e[b].indexOf("0") == 0) { e[b] = e[b].substring(1) } } var d = parseInt(e[0]); var f = parseInt(e[1]) - 1; var a = parseInt(e[2]); return new Date(d, f, a) } function getDiffDate(c, d) { var b = new Date(); b = b.valueOf(); b = b + c * 24 * 60 * 60 * 1000; b = new Date(b); return formatDate(b, d) } function TimeCom(a) { var b = new Date(a); this.year = b.getFullYear(); this.month = b.getMonth() + 1; this.day = b.getDate(); this.hour = b.getHours(); this.minute = b.getMinutes(); this.second = b.getSeconds(); this.msecond = b.getMilliseconds(); this.week = b.getDay() } function DateDiff(d, f, e) { var c = new TimeCom(f); var b = new TimeCom(e); var a; switch (String(d).toLowerCase()) { case "y": case "year": a = c.year - b.year; break; case "n": case "month": a = (c.year - b.year) * 12 + (c.month - b.month); break; case "d": case "day": a = Math.round((Date.UTC(c.year, c.month - 1, c.day) - Date.UTC(b.year, b.month - 1, b.day)) / (1000 * 60 * 60 * 24)); break; case "h": case "hour": a = Math.round((Date.UTC(c.year, c.month - 1, c.day, c.hour) - Date.UTC(b.year, b.month - 1, b.day, b.hour)) / (1000 * 60 * 60)); break; case "m": case "minute": a = Math.round((Date.UTC(c.year, c.month - 1, c.day, c.hour, c.minute) - Date.UTC(b.year, b.month - 1, b.day, b.hour, b.minute)) / (1000 * 60)); break; case "s": case "second": a = Math.round((Date.UTC(c.year, c.month - 1, c.day, c.hour, c.minute, c.second) - Date.UTC(b.year, b.month - 1, b.day, b.hour, b.minute, b.second)) / 1000); break; case "ms": case "msecond": a = Date.UTC(c.year, c.month - 1, c.day, c.hour, c.minute, c.second, c.msecond) - Date.UTC(b.year, b.month - 1, b.day, b.hour, b.minute, b.second, c.msecond); break; case "w": case "week": a = Math.round((Date.UTC(c.year, c.month - 1, c.day) - Date.UTC(b.year, b.month - 1, b.day)) / (1000 * 60 * 60 * 24)) % 7; break; default: a = "invalid" } return (a) } function DateAdd(a, c, d, f) { var e = new TimeCom(d); switch (String(a).toLowerCase()) { case "y": case "year": e.year += c; break; case "n": case "month": e.month += c; break; case "d": case "day": e.day += c; break; case "h": case "hour": e.hour += c; break; case "m": case "minute": e.minute += c; break; case "s": case "second": e.second += c; break; case "ms": case "msecond": e.msecond += c; break; case "w": case "week": e.day += c * 7; break; default: return ("invalid") } var b = e.year + "/" + e.month + "/" + e.day + " " + e.hour + ":" + e.minute + ":" + e.second; return formatDate(new Date(b), f) } function AddDay(a, c, d) { var e = new TimeCom(d); switch (String(a).toLowerCase()) { case "y": case "year": e.year += c; break; case "n": case "month": e.month += c; break; case "d": case "day": e.day += c; break; case "h": case "hour": e.hour += c; break; case "m": case "minute": e.minute += c; break; case "s": case "second": e.second += c; break; case "ms": case "msecond": e.msecond += c; break; case "w": case "week": e.day += c * 7; break; default: return ("invalid") } var b = e.year + "/" + e.month + "/" + e.day + " " + e.hour + ":" + e.minute + ":" + e.second; return new Date(b) } function getToDay(b) { var a = new Date(); M = Number(a.getMonth()) + 1; a = new Date(a.getFullYear() + "/" + M + "/" + a.getDate()); return formatDate(a, b) } function getPreviousFirstDay(c) { var a = new Date(); var b = new Date(a.getFullYear(), a.getMonth() - 1, 1); return formatDate(b, c) } function getPreviousFirstDay2(a) { var b = new Date(a.getFullYear(), a.getMonth(), a.getDate() - 1); return b } function getPreviousLastDay(c) { var a = new Date(); var b = new Date(a.getFullYear(), a.getMonth(), 1); return formatDate(new Date(b - 86400000), c) } function getPreviousFirstWeekDay(c) { var a = new Date(); var b = new Date(a - (a.getDay() - 1) * 86400000); b = new Date(b - 86400000 * 7); return formatDate(b, c) } function showPreviousLastWeekDay(c) { var a = new Date(); var b = new Date(a - (a.getDay() - 1) * 86400000); b = new Date(b - 86400000); return formatDate(b, c) } function getPreviousDay(b) { var a = new Date(); a = new Date(a - 86400000); return formatDate(a, b) } function getNextDay(b) { var a = new Date(); a = new Date((a / 1000 + 86400) * 1000); return formatDate(a, b) } function getNextFirstWeekDay(d) { var a = new Date(); var c = new Date(a - (a.getDay() - 1) * 86400000); var b = new Date((c / 1000 + 6 * 86400) * 1000); b = new Date((b / 1000 + 86400) * 1000); return formatDate(b, d) } function getNextLastWeekDay(e) { var a = new Date(); var c = new Date(a - (a.getDay() - 1) * 86400000); var d = new Date((c / 1000 + 6 * 86400) * 1000); var b = new Date((d / 1000 + 7 * 86400) * 1000); return formatDate(b, e) } function getNextFirstDay(c) { var a = new Date(); var b = new Date(a.getFullYear(), a.getMonth(), 1); b = new Date(b.getYear(), b.getMonth() + 1, 1); return formatDate(b, c) } function getNextLastDay(c) { var a = new Date(); var b = new Date(a.getFullYear(), a.getMonth(), 1); b = new Date(new Date(b.getYear(), b.getMonth() + 2, 1) - 86400000); return formatDate(b, c) };